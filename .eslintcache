[{"C:\\wrk\\self\\XO\\xo\\src\\App.js":"1","C:\\wrk\\self\\XO\\xo\\src\\ais\\Manager.js":"2","C:\\wrk\\self\\XO\\xo\\src\\index.js":"3","C:\\wrk\\self\\XO\\xo\\src\\ais\\ExamplePlayer.js":"4","C:\\wrk\\self\\XO\\xo\\src\\components\\Field.js":"5","C:\\wrk\\self\\XO\\xo\\src\\components\\PlayerInfo.js":"6","C:\\wrk\\self\\XO\\xo\\src\\ais\\OxysPlayer.js":"7"},{"size":2650,"mtime":1610382559538,"results":"8","hashOfConfig":"9"},{"size":5662,"mtime":1610465066791,"results":"10","hashOfConfig":"9"},{"size":500,"mtime":1606218399158,"results":"11","hashOfConfig":"9"},{"size":604,"mtime":1610367414123,"results":"12","hashOfConfig":"9"},{"size":1384,"mtime":1610368571642,"results":"13","hashOfConfig":"9"},{"size":714,"mtime":1610371183175,"results":"14","hashOfConfig":"9"},{"size":11296,"mtime":1610463852759,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},"1oisoaw",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\wrk\\self\\XO\\xo\\src\\App.js",["31","32"],"import logo from './logo.svg';\r\nimport React, {useState, useEffect} from 'react';\r\nimport './App.css';\r\nimport Field from \"./components/Field\";\r\nimport Manager from \"./ais/Manager\";\r\nimport PlayerInfo from \"./components/PlayerInfo\";\r\n\r\nconst FILED_WIDTH = 15;\r\nconst FIELD_HEIGHT = 15;\r\nlet manager = null;\r\nlet interval = null;\r\n\r\nfunction App() {\r\n    let fieldRows = [];\r\n    const fieldRow = [];\r\n    const humanMode = true;\r\n\r\n    fieldRows.length = FIELD_HEIGHT;\r\n    fieldRow.length = FILED_WIDTH;\r\n    fieldRow.fill(null)\r\n    fieldRows = fieldRows.fill(null).map(\r\n        () => fieldRow.slice()\r\n    )\r\n    const [fieldModel, setFieldModel] = useState(fieldRows);\r\n    const [step, setStep] = useState(1);\r\n    const [current, setCurrent] = useState(1);\r\n    const [streak, setStreak] = useState(null);\r\n    const [player1Time, setPlayer1Time] = useState(0);\r\n    const [player2Time, setPlayer2Time] = useState(0);\r\n\r\n    if(!manager) {\r\n        manager = new Manager(fieldModel, humanMode);\r\n    }\r\n\r\n    function startGame() {\r\n        clearInterval(interval);\r\n        interval = setInterval(() => {\r\n            const result = manager.step()\r\n            if (!result) {\r\n                return clearInterval(interval);\r\n            }\r\n            if (result.win) {\r\n                setStreak(result.streak);\r\n                return clearInterval(interval);\r\n            }\r\n            setFieldModel(result);\r\n            setStep(step + 1);\r\n            setCurrent(manager.current);\r\n            setPlayer1Time(manager.player1Time);\r\n            setPlayer2Time(manager.player2Time);\r\n        }, 500);\r\n    }\r\n\r\n    startGame();\r\n\r\n    const onCellClick = (i, j) => {\r\n        if (manager.current !== 2) {\r\n            return\r\n        }\r\n        const result = manager.humanInput([i, j]);\r\n        if (!result) {\r\n            return\r\n        }\r\n        if (result.win) {\r\n            setStreak(result.streak);\r\n            return clearInterval(interval);\r\n        }\r\n        setFieldModel(result);\r\n        setStep(step + 1);\r\n        setCurrent(manager.current);\r\n    }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <div>Step: {step}</div>\r\n            <div className=\"game-wrapper\">\r\n                <PlayerInfo isCurrent={current === 1} name={manager.player1Name} time={player1Time} symbol={manager.player1Symbol} />\r\n                <Field onCellClick={onCellClick} fieldModel={fieldModel} streak={streak}/>\r\n                <PlayerInfo isCurrent={current === 2} name={manager.player2Name} time={player2Time} symbol={manager.player2Symbol} />\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default App;\r\n","C:\\wrk\\self\\XO\\xo\\src\\ais\\Manager.js",[],"C:\\wrk\\self\\XO\\xo\\src\\index.js",[],"C:\\wrk\\self\\XO\\xo\\src\\ais\\ExamplePlayer.js",[],"C:\\wrk\\self\\XO\\xo\\src\\components\\Field.js",[],"C:\\wrk\\self\\XO\\xo\\src\\components\\PlayerInfo.js",[],"C:\\wrk\\self\\XO\\xo\\src\\ais\\OxysPlayer.js",[],{"ruleId":"33","severity":1,"message":"34","line":1,"column":8,"nodeType":"35","messageId":"36","endLine":1,"endColumn":12},{"ruleId":"33","severity":1,"message":"37","line":2,"column":26,"nodeType":"35","messageId":"36","endLine":2,"endColumn":35},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used."]