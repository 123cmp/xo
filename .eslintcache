[{"C:\\wrk\\self\\XO\\xo\\src\\App.js":"1","C:\\wrk\\self\\XO\\xo\\src\\ais\\Manager.js":"2","C:\\wrk\\self\\XO\\xo\\src\\index.js":"3","C:\\wrk\\self\\XO\\xo\\src\\ais\\ExamplePlayer.js":"4","C:\\wrk\\self\\XO\\xo\\src\\components\\Field.js":"5","C:\\wrk\\self\\XO\\xo\\src\\components\\PlayerInfo.js":"6","C:\\wrk\\self\\XO\\xo\\src\\ais\\OxysPlayer.js":"7","C:\\wrk\\self\\XO\\xo\\src\\ais\\ZrxPlayer.js":"8"},{"size":2652,"mtime":1611062819881,"results":"9","hashOfConfig":"10"},{"size":5752,"mtime":1610468108188,"results":"11","hashOfConfig":"10"},{"size":500,"mtime":1606218399158,"results":"12","hashOfConfig":"10"},{"size":604,"mtime":1610367414123,"results":"13","hashOfConfig":"10"},{"size":1384,"mtime":1610368571642,"results":"14","hashOfConfig":"10"},{"size":714,"mtime":1610371183175,"results":"15","hashOfConfig":"10"},{"size":11296,"mtime":1610463852759,"results":"16","hashOfConfig":"10"},{"size":18991,"mtime":1611064650023,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1oisoaw",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":3,"source":"34"},"C:\\wrk\\self\\XO\\xo\\src\\App.js",["35","36"],"C:\\wrk\\self\\XO\\xo\\src\\ais\\Manager.js",[],"C:\\wrk\\self\\XO\\xo\\src\\index.js",[],"C:\\wrk\\self\\XO\\xo\\src\\ais\\ExamplePlayer.js",[],"C:\\wrk\\self\\XO\\xo\\src\\components\\Field.js",[],"C:\\wrk\\self\\XO\\xo\\src\\components\\PlayerInfo.js",[],"C:\\wrk\\self\\XO\\xo\\src\\ais\\OxysPlayer.js",[],"C:\\wrk\\self\\XO\\xo\\src\\ais\\ZrxPlayer.js",["37","38","39","40"],"export default class ZrxPlayer {\n    constructor(sign) {\n        this.sign = sign;\n        sign == \"X\" ? this.enemySign = \"O\" : this.enemySign = \"X\";\n\n        this.patternMap = [\n\n            // 4 my at row\n            {\n                \"template\": [null,this.sign,this.sign,this.sign,this.sign],\n                \"solution\": [9999,this.sign,this.sign,this.sign,this.sign],\n            },\n            {\n                \"template\": [this.sign,this.sign,this.sign,this.sign,null],\n                \"solution\": [this.sign,this.sign,this.sign,this.sign,9999]\n            },\n            // 4 my with holes\n            {\n                \"template\": [null,this.sign,this.sign,this.sign,this.sign],\n                \"solution\": [9999,this.sign,this.sign,this.sign,this.sign]\n            },\n            {\n                \"template\": [this.sign,null,this.sign,this.sign,this.sign],\n                \"solution\": [this.sign,9999,this.sign,this.sign,this.sign]\n            },\n            {\n                \"template\": [this.sign,this.sign,null,this.sign,this.sign],\n                \"solution\": [this.sign,this.sign,9999,this.sign,this.sign]\n            },\n            {\n                \"template\": [this.sign,this.sign,this.sign,null,this.sign],\n                \"solution\": [this.sign,this.sign,this.sign,9999,this.sign]\n            },\n            {\n                \"template\": [this.sign,this.sign,this.sign,this.sign,null],\n                \"solution\": [this.sign,this.sign,this.sign,this.sign,9999]\n            },\n            // 4 enemy ar row\n            {\n                \"template\": [null,this.enemySign,this.enemySign,this.enemySign,this.enemySign],\n                \"solution\": [1000,this.enemySign,this.enemySign,this.enemySign,this.enemySign],\n            },\n            {\n                \"template\": [this.enemySign,this.enemySign,this.enemySign,this.enemySign,null],\n                \"solution\": [this.enemySign,this.enemySign,this.enemySign,this.enemySign,1000]\n            },\n            // 4 enemy with holes\n            {\n                \"template\": [null,this.enemySign,this.enemySign,this.enemySign,this.enemySign],\n                \"solution\": [1000,this.enemySign,this.enemySign,this.enemySign,this.enemySign]\n            },\n            {\n                \"template\": [this.enemySign,null,this.enemySign,this.enemySign,this.enemySign],\n                \"solution\": [this.enemySign,1000,this.enemySign,this.enemySign,this.enemySign]\n            },\n            {\n                \"template\": [this.enemySign,this.enemySign,null,this.enemySign,this.enemySign],\n                \"solution\": [this.enemySign,this.enemySign,1000,this.enemySign,this.enemySign]\n            },\n            {\n                \"template\": [this.enemySign,this.enemySign,this.enemySign,null,this.enemySign],\n                \"solution\": [this.enemySign,this.enemySign,this.enemySign,1000,this.enemySign]\n            },\n            {\n                \"template\": [this.enemySign,this.enemySign,this.enemySign,this.enemySign,null],\n                \"solution\": [this.enemySign,this.enemySign,this.enemySign,this.enemySign,1000]\n            },\n            // 3 my at row with free direction\n            {\n                \"template\": [null,null,this.sign,this.sign,this.sign],\n                \"solution\": [170,200,this.sign,this.sign,this.sign]\n            },\n            {\n                \"template\": [this.sign,this.sign,this.sign,null,null],\n                \"solution\": [this.sign,this.sign,this.sign,200,170]\n            },\n            // 3 my with holes with free 2 directions\n            {\n                \"template\": [null,this.sign,null,this.sign,this.sign,null],\n                \"solution\": [160,this.sign,200,this.sign,this.sign,160]\n            },\n            {\n                \"template\": [null,this.sign,this.sign,null,this.sign,null],\n                \"solution\": [160,this.sign,this.sign,200,this.sign,160]\n            },\n            // 3 my at row with free 1 direction\n            {\n                \"template\": [null,null,this.sign,this.sign,this.sign],\n                \"solution\": [120,180,this.sign,this.sign,this.sign]\n            },\n            {\n                \"template\": [this.sign,this.sign,this.sign,null,null],\n                \"solution\": [this.sign,this.sign,this.sign,180,120]\n            },\n            // 3 my with holes with free 1 direction\n            {\n                \"template\": [this.sign,null,this.sign,this.sign,null,null],\n                \"solution\": [this.sign,180,this.sign,this.sign,180,0]\n            },\n            {\n                \"template\": [null,null,this.sign,null,this.sign,this.sign],\n                \"solution\": [0,180,this.sign,180,this.sign,this.sign]\n            },\n            {\n                \"template\": [this.sign,this.sign,null,this.sign,null,null],\n                \"solution\": [this.sign,this.sign,180,this.sign,180,0]\n            },\n            {\n                \"template\": [null,null,this.sign,this.sign,null,this.sign],\n                \"solution\": [0,180,this.sign,this.sign,180,this.sign]\n            },\n            // 3 enemy at row with free 2 directions\n            {\n                \"template\": [null,null,this.enemySign,this.enemySign,this.enemySign],\n                \"solution\": [0,130,this.enemySign,this.enemySign,this.enemySign]\n            },\n            {\n                \"template\": [this.enemySign,this.enemySign,this.enemySign,null,null],\n                \"solution\": [this.enemySign,this.enemySign,this.enemySign,130,0]\n            },\n            // 3 enemy with holes with free 2 directions\n            {\n                \"template\": [null,this.enemySign,null,this.enemySign,this.enemySign,null],\n                \"solution\": [0,this.enemySign,130,this.enemySign,this.enemySign,0]\n            },\n            {\n                \"template\": [null,this.enemySign,this.enemySign,null,this.enemySign,null],\n                \"solution\": [0,this.enemySign,this.enemySign,130,this.enemySign,0]\n            },\n            // 3 enemy at row with free 1 direction\n            {\n                \"template\": [null,null,this.enemySign,this.enemySign,this.enemySign],\n                \"solution\": [0,101,this.enemySign,this.enemySign,this.enemySign]\n            },\n            {\n                \"template\": [this.enemySign,this.enemySign,this.enemySign,null,null],\n                \"solution\": [this.enemySign,this.enemySign,this.enemySign,101,0]\n            },\n            // 3 enemy with holes with free 1 direction\n            {\n                \"template\": [this.enemySign,null,this.enemySign,this.enemySign,null,null],\n                \"solution\": [this.enemySign,100,this.enemySign,this.enemySign,100,0]\n            },\n            {\n                \"template\": [null,null,this.enemySign,null,this.enemySign,this.enemySign],\n                \"solution\": [0,100,this.enemySign,100,this.enemySign,this.enemySign]\n            },\n            {\n                \"template\": [this.enemySign,this.enemySign,null,this.enemySign,null,null],\n                \"solution\": [this.enemySign,this.enemySign,100,this.enemySign,100,0]\n            },\n            {\n                \"template\": [null,null,this.enemySign,this.enemySign,null,this.enemySign],\n                \"solution\": [0,100,this.enemySign,this.enemySign,100,this.enemySign]\n            },\n\n            // 2 my at row with free directions (+1 extra)\n            {\n                \"template\": [null,null,null,null,this.sign,this.sign],\n                \"solution\": [25,25,25,25,this.sign,this.sign]\n            },\n            {\n                \"template\": [this.sign,this.sign,null,null,null,null],\n                \"solution\": [this.sign,this.sign,25,25,25,25]\n            },\n            // 2 my at row with free directions (no extra)\n            {\n                \"template\": [null,null,null,this.sign,this.sign],\n                \"solution\": [20,20,20,this.sign,this.sign]\n            },\n            {\n                \"template\": [null,null,this.sign,this.sign,null],\n                \"solution\": [20,20,this.sign,this.sign,20]\n            },\n            {\n                \"template\": [this.sign,this.sign,null,null,null],\n                \"solution\": [this.sign,this.sign,20,20,20]\n            },\n            {\n                \"template\": [null,this.sign,this.sign,null,null],\n                \"solution\": [20,this.sign,this.sign,20,20]\n            },\n            // 2 my with hole with free directions (+1 extra)\n            {\n                \"template\": [null,this.sign,null,this.sign,null,null],\n                \"solution\": [25,this.sign,25,this.sign,0,0]\n            },\n            {\n                \"template\": [null,null,this.sign,null,this.sign,null],\n                \"solution\": [0,0,this.sign,25,this.sign,25]\n            },\n            {\n                \"template\": [null,null,null,this.sign,null,this.sign],\n                \"solution\": [0,0,25,this.sign,25,this.sign]\n            },\n            {\n                \"template\": [this.sign,null,this.sign,null,null,null],\n                \"solution\": [this.sign,25,this.sign,25,0,0]\n            },\n\n            // 2 my with hole with free directions (no extra)\n            {\n                \"template\": [null,this.sign,null,this.sign,null],\n                \"solution\": [0,this.sign,20,this.sign,0]\n            },\n            {\n                \"template\": [null,null,this.sign,null,this.sign],\n                \"solution\": [0,0,this.sign,20,this.sign]\n            },\n            {\n                \"template\": [this.sign,null,this.sign,null,null],\n                \"solution\": [this.sign,20,this.sign,0,0]\n            },\n            // 2 enemy at row with free directions (+1 extra)\n            {\n                \"template\": [null,null,null,null,this.enemySign,this.enemySign],\n                \"solution\": [0,0,15,15,this.enemySign,this.enemySign]\n            },\n            {\n                \"template\": [this.enemySign,this.enemySign,null,null,null,null],\n                \"solution\": [this.enemySign,this.enemySign,15,15,0,0]\n            },\n            // 2 enemy at row with free directions (no extra)\n            {\n                \"template\": [null,null,null,this.enemySign,this.enemySign],\n                \"solution\": [0,0,12,this.enemySign,this.enemySign]\n            },\n            {\n                \"template\": [null,null,this.enemySign,this.enemySign,null],\n                \"solution\": [0,12,this.enemySign,this.enemySign,0]\n            },\n            {\n                \"template\": [this.enemySign,this.enemySign,null,null,null],\n                \"solution\": [this.enemySign,this.enemySign,12,0,0]\n            },\n            {\n                \"template\": [null,this.enemySign,this.enemySign,null,null],\n                \"solution\": [0,this.enemySign,this.enemySign,12,0]\n            },\n            // 2 enemy with hole with free directions (+1 extra)\n            {\n                \"template\": [null,this.enemySign,null,this.enemySign,null,null],\n                \"solution\": [0,this.enemySign,12,this.enemySign,12,0]\n            },\n            {\n                \"template\": [null,null,this.enemySign,null,this.enemySign,null],\n                \"solution\": [0,12,this.enemySign,12,this.enemySign,0]\n            },\n            {\n                \"template\": [null,null,null,this.enemySign,null,this.enemySign],\n                \"solution\": [0,0,12,this.enemySign,12,this.enemySign]\n            },\n            {\n                \"template\": [this.enemySign,null,this.enemySign,null,null,null],\n                \"solution\": [this.enemySign,12,this.enemySign,12,0,0]\n            },\n\n            // 2 enemy with hole with free directions (no extra)\n            {\n                \"template\": [null,this.enemySign,null,this.enemySign,null],\n                \"solution\": [10,this.enemySign,10,this.enemySign,10]\n            },\n            {\n                \"template\": [null,null,this.enemySign,null,this.enemySign],\n                \"solution\": [10,10,this.enemySign,10,this.enemySign]\n            },\n            {\n                \"template\": [this.enemySign,null,this.enemySign,null,null],\n                \"solution\": [this.enemySign,10,this.enemySign,10,10]\n            },\n\n\n            // Basics\n            {\n                \"template\": [this.sign,null],\n                \"solution\": [this.sign,3]\n            },\n            {\n                \"template\": [null,this.sign],\n                \"solution\": [3,this.sign]\n            },\n            {\n                \"template\": [this.enemySign,null],\n                \"solution\": [this.sign,1]\n            },\n            {\n                \"template\": [null,this.enemySign],\n                \"solution\": [1,this.enemySign]\n            },\n        ];\n    }\n\n    next(matrix) {\n        let m1 = this.processHorizontals([...matrix]);\n        let m2 = this.processVerticals([...matrix]);\n        let m3 = this.processDiagonalsUp([...matrix]);\n        let m4 = this.processDiagonalsDown([...matrix]);\n\n        let a =  this.matrixAddition(m1,m2,m3,m4);\n        console.log(a);\n\n        let res = this.getResult(a);\n\n        console.log(res);\n        return res;\n    }\n\n    processPattern(argsLine, pattern) {\n        let line = [...argsLine],\n            completedMatch = 0;\n\n        L: for (let lineElemId = 0; lineElemId < line.length; lineElemId++) {\n            P: for (let patternElemId = 0 + completedMatch; patternElemId < pattern.template.length; patternElemId++) {\n                if (line[lineElemId] === pattern.template[patternElemId]) {\n                    completedMatch++;\n                    if (completedMatch === pattern.template.length) {\n                        // Replacing here\n                        for (let lineReplaceId = lineElemId - completedMatch + 1, patternReplaceId = 0;\n                                 patternReplaceId < pattern.template.length;\n                                 lineReplaceId++, patternReplaceId++\n                        ) {\n                                line[lineReplaceId] = pattern.solution[patternReplaceId];\n                        }\n                        completedMatch = 0;\n                        lineElemId = patternElemId = -1;\n                        break P;\n                    }\n                    continue L;\n                } else {\n                    if (completedMatch === 0) {\n                        completedMatch = 0;\n                        break P;\n                    }\n                    completedMatch = 0;\n                    patternElemId = -1;\n                    continue P;\n                }\n            }\n        }\n        return line;\n    }\n\n    processLine(line) {\n        this.patternMap.forEach(pattern => {\n            line = this.processPattern(line, pattern);\n        });\n        return line;\n    };\n\n    processHorizontals(/*Array*/ matrix) {\n        let resultMatrix = matrix.map(arr => arr.slice());\n\n        for (let rowNumber = 0; rowNumber < matrix.length; rowNumber++) {\n            resultMatrix[rowNumber] = this.processLine(matrix[rowNumber]);\n        }\n\n        return resultMatrix;\n    }\n    processVerticals(/*Array*/ matrix) {\n        let resultMatrix = matrix.map(arr => arr.slice());\n\n        for (let colNumber = 0; colNumber < matrix.length; colNumber++) {\n            let column = [];\n            for (let rowNumber = 0; rowNumber < matrix.length; rowNumber++) {\n                column.push(matrix[rowNumber][colNumber]);\n            }\n\n            column = this.processLine(column);\n\n            for (let rowNumber = 0; rowNumber < matrix.length; rowNumber++) {\n                resultMatrix[rowNumber][colNumber] = column[rowNumber]\n            }\n        }\n\n        return resultMatrix;\n    }\n\n    processDiagonalsUp(/*Array*/ matrix) {\n        let resultMatrix = matrix.map(arr => arr.slice());\n\n        for (let bias = -matrix.length + 1; bias < matrix.length; bias++) {\n            let diagonale = [];\n            for (let y = 0, x = matrix.length-1; y < matrix.length; y++, x--) {\n                if (matrix[x][y+bias] !== undefined) {\n                    diagonale.push(matrix[x][y+bias]);\n                }\n            }\n\n            diagonale = this.processLine(diagonale);\n\n            for (let i = 0, y = 0, x = matrix.length-1; y < matrix.length; y++, x--) {\n                if (matrix[x][y+bias] !== undefined) {\n                    resultMatrix[x][y+bias] = diagonale[i];\n                    i++;\n                }\n            }\n        }\n\n        return resultMatrix;\n    }\n\n\n    processDiagonalsDown(/*Array*/ matrix) {\n        let resultMatrix = matrix.map(arr => arr.slice());\n\n        for (let bias = -matrix.length; bias < matrix.length; bias++) {\n            let diagonale = [];\n            for (let xy = 0; xy < matrix.length; xy++) {\n                if (matrix[xy][xy+bias] !== undefined) {\n                    diagonale.push(matrix[xy][xy+bias]);\n                }\n            }\n\n            diagonale = this.processLine(diagonale);\n\n            for (let xy = 0, i = 0; xy < matrix.length; xy++) {\n                if (matrix[xy][xy+bias] !== undefined) {\n                    resultMatrix[xy][xy+bias] = diagonale[i];\n                    i++;\n                }\n            }\n        }\n\n        return resultMatrix;\n    }\n\n    matrixAddition(...args) {\n        let sumMatrix = new Array(args[0].length);\n\n        for (let i = 0; i < sumMatrix.length; i++) {\n            sumMatrix[i] = new Array(args[0].length);\n            for (let j = 0; j < sumMatrix.length; j++) {\n                sumMatrix[i][j] = 0;\n            }\n        }\n\n        args.forEach(matrix => {\n            for (let y = 0; y < matrix.length; y++) {\n                for (let x = 0; x < matrix.length; x++) {\n                    if (typeof(matrix[y][x]) == \"number\") {\n                        sumMatrix[y][x] += matrix[y][x];\n                    }\n                }\n            }\n        });\n\n        return sumMatrix;\n    }\n\n    getResult(/*Array*/ matrix) {\n        let randomMaximalNumber,\n            maximals = [\n            {\n                \"value\": 1,\n                \"x\": Math.floor(matrix.length/2),\n                \"y\": Math.floor(matrix.length/2),\n            }\n        ];\n\n        for (let y = 0; y < matrix.length; y++) {\n            for (let x = 0; x < matrix.length; x++) {\n\n                if (matrix[y][x] === maximals[0].value && matrix[y][x] > 0) {\n                    maximals.push({\n                        value: matrix[y][x],\n                        x: x,\n                        y: y,\n                    });\n                }\n\n                if (matrix[y][x] > maximals[0].value) {\n                    maximals = [];\n                    maximals.push({\n                        value: matrix[y][x],\n                        x: x,\n                        y: y,\n                    });\n                }\n\n            }\n        }\n\n        if (maximals.length > 1) {\n            randomMaximalNumber = Math.floor(Math.random() * maximals.length);\n        } else {\n            return [maximals[0].y, maximals[0].x];\n        }\n\n        return [maximals[randomMaximalNumber].y, maximals[randomMaximalNumber].x];\n    }\n}",{"ruleId":"41","severity":1,"message":"42","line":1,"column":8,"nodeType":"43","messageId":"44","endLine":1,"endColumn":12},{"ruleId":"41","severity":1,"message":"45","line":2,"column":26,"nodeType":"43","messageId":"44","endLine":2,"endColumn":35},{"ruleId":"46","severity":1,"message":"47","line":4,"column":14,"nodeType":"48","messageId":"49","endLine":4,"endColumn":16},{"ruleId":"50","severity":1,"message":"51","line":326,"column":31,"nodeType":"43","messageId":"49","endLine":326,"endColumn":32,"fix":"52"},{"ruleId":"50","severity":1,"message":"51","line":332,"column":31,"nodeType":"43","messageId":"49","endLine":332,"endColumn":32,"fix":"53"},{"ruleId":"50","severity":1,"message":"51","line":336,"column":30,"nodeType":"43","messageId":"49","endLine":336,"endColumn":31,"fix":"54"},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-extra-label","This label 'P' is unnecessary.",{"range":"55","text":"56"},{"range":"57","text":"56"},{"range":"58","text":"56"},[14073,14075],"",[14277,14279],[14411,14413]]